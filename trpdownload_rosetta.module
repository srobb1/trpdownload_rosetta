<?php
/**
 * @file
 * Provides some examples showing how module developers could use the
 * Tripal Download API.
 */

/**
 * Implements hook_register_trpdownload_type().
 */
function trpdownload_rosetta_register_trpdownload_type() {
  $types = array();

  $types['rosetta_csv'] = array(
    'type_name' => 'Rosetta Stone CSV',
    'format' => 'Comma-separated Values',
    'functions' => array(
      'generate_file' => 'trpdownload_rosetta_csv_generate_file',
    ),
  );

  return $types;
}

/**
 * Implements hook_menu().
 */
function trpdownload_rosetta_menu() {
  $items = array();

  $items['chado/rosetta/csv'] = array(
    'title' => 'Download Rosetta Stone: CSV',
    'page callback' => 'trpdownload_download_page',
    'page arguments' => array('rosetta_csv', 3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,);
  
  return $items;
}

/**
 * Generates a file listing feature in CSV.
 *
 * @param $variables
 *   An associative array of parameters including:
 *     - q: all the query paramters.
 *     - site_safe_name: a sanitized version of your site name for use in variables & filenames.
 *     - type_info: an array of info for the download type.
 *     - suffix: the file format suffix.
 *     - filename: the filename of the file to generate not including path.
 *     - fullpath: the full path and filename of the file to generate.
 *     - format_name: a human-readable description of the format.
 * @param $job_id
 *   The ID of the tripal job executing this function ;-).
 */
function trpdownload_rosetta_csv_generate_file($variables, $job_id = NULL) {

  // Create the file and ready it for writting to.
  $filepath = variable_get('trpdownload_fullpath', '') . $variables['filename'];
  drush_print("File: " . $filepath);
  $FILE = fopen($filepath, 'w') or die ('Uable to create file to write to');


  // Add header to the file.
  fputcsv($FILE, array(
    'Transcript ID',
    'Transcript Name',
    'DB',
    'Other Transcript ID'
  ));

  $other_db_name = $variables["q"]["other_db_name"];
  $SIMRbase_uniquename = $variables["q"]["SIMRbase_uniquename"];
  $other_uniquename = $variables["q"]["other_uniquename"];

print(SIMRbase_uniquename);

  $where_db = '';
  $where_other_id = '';
  $where_simrbase_id = '';
  $q_args = array();

  if (!empty($other_db_name) and $other_db_name != 'All'){
   $in_array = preg_split('/[\s,]+/',$other_db_name);
   $in_string = "'" . join("','",$in_array) . "'";

   $where_db = "other_db_name in ($in_string)";
  }

  if (!empty($other_uniquename)){
   $in_array = preg_split('/[\s,]+/',$other_uniquename);
   $in_string = "'" . join("','",$in_array) . "'";
   
   $where_other_id = "other_uniquename in ($in_string)";
  }

  if (!empty($SIMRbase_uniquename)){
   $in_array = preg_split('/[\s,]+/',$SIMRbase_uniquename);
   $in_string = "'" . join("','",$in_array) . "'";

   $where_simrbase_id = "SIMRbase_uniquename in ($in_string)";
  }


  // Query copied from the views interface with where arguments determined above.
  $query = "
     SELECT F.uniquename ,F.name , R.other_db_name, R.other_uniquename FROM {rosetta_stone_transcript_mapper} R , {feature} F
     WHERE R.SIMRbase_uniquename = F.uniquename
";

  if (!empty($where_db)){
    $query = "$query AND $where_db";
  }
  if (!empty($where_other_id) and !empty($where_simrbase_id)){
    $query = "$query AND ($where_other_id OR $where_simrbase_id)";
  } elseif (!empty($where_other_id) and empty($where_simrbase_id)){
     $query = "$query AND $where_other_id ";
  }elseif (empty($where_other_id) and !empty($where_simrbase_id)){
     $query = "$query AND $where_simrbase_id ";
  }
   $rosettaStones = chado_query($query,$q_args);


  // for tracking progress.
  $count_query = preg_replace('/SELECT.*FROM/s', 'SELECT count(*) as num_lines FROM', $query);
  //$count_query = preg_replace('/ORDER BY .*$/', '', $count_query);
  $total_lines = chado_query($count_query, array(":feature_id" => $feature_id))->fetchField();
  drush_print('Total Lines: '.$total_lines);

  // For each db result write a CSV line to the file.
  $cur_line = 0;
  foreach ($rosettaStones as $row) {

    // Output the progress.
    $cur_line++;
    $percent = $cur_line/$total_lines * 100;
    if ($percent%5 == 0) {
      drush_print(round($percent,2).'% Complete.');
      db_query('UPDATE {tripal_jobs} SET progress=:percent WHERE job_id=:id',
        array(':percent' => round($percent), ':id' => $job_id));
    }

    // Don't forget to write the line to the file ;-).
    fputcsv($FILE, (array)$row );
  }

  // Finally, close the file.
  fclose($FILE);
}

